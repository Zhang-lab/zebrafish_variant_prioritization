# Zebrafish variant calling and prioritization pipeline Docker base build
# Version 0.1.1 - April-06-2021


FROM ubuntu:16.04

LABEL maintainer="Wustl.Zhanglab@gmail.com"

RUN mkdir /myvol
VOLUME /myvol

# install all build-essentials
# check later for nonesentials to reduce image size
RUN apt-get update \ 
	&& apt-get install -y \
        apt-transport-https \
		bc \
        bioperl \
        bzip2 \
        ca-certificates \
        curl \
        default-jre \
        g++ \
        gcc \
        gfortran \
        git \
        less \
        libdatetime-perl \
        libbz2-dev \
        libcurl4-openssl-dev \
        libdbi-perl \
        libdigest-md5-perl \
        libgsl-dev \
        libgsl2 \
        liblzma-dev \
        libmysqlclient-dev \
        libncurses5-dev \
        libpcre3-dev \
        libreadline-dev \
        libssl-dev \
        libx11-dev \
        libxml-simple-perl \
        make \
        python-dev \
        texlive-latex-base texlive-latex-extra \
        unzip \
        xorg-dev \
        zlib1g-dev \
        vim \
	locales \
	debconf \
    && rm -rf /var/lib/apt/lists/* 

# fix locale issue
# the locale issue is in Singularity, so those MUST be in S.def file rather than here
# RUN apt-get install debconf
# RUN dpkg-reconfigure locales


# install conda
RUN cd /opt/ \
    && curl -fsSL https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -o /opt/Miniconda2-latest-Linux-x86_64.sh \
    && bash Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda \
    && rm Miniconda2-latest-Linux-x86_64.sh \
    && ln -s /opt/miniconda/bin/conda /usr/bin/ \
    && conda config --add channels defaults \
    && conda config --add channels conda-forge \
    && conda config --add channels bioconda \
    && conda install gxx_linux-64



# install docker image id finding tools
RUN conda install -y  -c conda-forge jq
RUN conda install -y htslib=1.3.1

# cp files from server into the image:
RUN mkdir /data
RUN mkdir /scratch
WORKDIR /data
RUN mkdir /Programs
RUN mkdir /RefData

#Install R and packages
RUN apt update -qq \
    && apt install -y --no-install-recommends software-properties-common dirmngr \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
    && add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu xenial-cran40/" \
    && apt update \
    && apt upgrade \
    && apt install -y --no-install-recommends r-base \
    && echo 'install.packages("gplots",repos="http://cran.us.r-project.org")' > /opt/packages.R \
    && echo 'install.packages("ggplot2",repos="http://cran.us.r-project.org")' >> /opt/packages.R \
    && echo 'install.packages("cowplot",repos="http://cran.us.r-project.org")' >> /opt/packages.R \
    && echo 'install.packages("qqman",repos="http://cran.us.r-project.org")' >> /opt/packages.R \
    && echo 'install.packages("openxlsx",repos="http://cran.us.r-project.org")' >> /opt/packages.R \
    && echo 'install.packages("readr",repos="http://cran.us.r-project.org")' >> /opt/packages.R \
    && Rscript /opt/packages.R



ENV PATH  $PATH:/opt/miniconda/bin/

#add pipe code
# set date to disable catch on pipe code
#ARG CACHE_DATE=`date`
#RUN curl -o /pipeline.sh  http://regmedsrv1.wustl.edu/Public_SPACE/pgontarz/Public_html/Zebrafish_variant_calling_and_prioritization/mutation_screen_wrapper_docker.sh
